#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // 64-key ASCII map (center column shown between bars)
            // |   `   |  1  |  2  |  3  |  4  |  5  |  Up   |  6  |  7  |  8  |  9  |  0  |  Del  |
            // |  ESC  |  Q  |  W  |  E  |  R  |  T  | Down  |  Y  |  U  |  I  |  O  |  P  | BSPC  |
            // |  TAB  |  A  |  S  |  D  |  F  |  G  | Left  |  H  |  J  |  K  |  L  |  ;  |  '    |
            // | SHIFT |  Z  |  X  |  C  |  V  |  B  | Right |  N  |  M  |  ,  |  .  |  /  | SHIFT |
            // | C_MUTE| LCTL| LGUI| LALT|LOWER|SPACE| ENTER |SPACE| ENTER|RAISE| RSHFT|  DEL |

            bindings = <
&kp GRAVE   &kp N1        &kp N2        &kp N3            &kp N4     &kp N5        &kp UP_ARROW     &kp N6     &kp N7  &kp N8             &kp N9         &kp N0         &kp DELETE
&kp ESC     &kp Q         &kp W         &kp E             &kp R      &kp T         &kp DOWN_ARROW   &kp Y      &kp U   &kp I              &kp O          &kp P          &kp BSPC
&kp TAB     &kp A         &kp S         &kp D             &kp F      &kp G         &kp LEFT_ARROW   &kp H      &kp J   &kp K              &kp L          &kp SEMI       &kp SQT
&kp LSHFT   &kp Z         &kp X         &kp C             &kp V      &kp B         &kp RIGHT_ARROW  &kp N      &kp M   &kp COMMA          &kp DOT        &kp FSLH       &kp RSHFT
&kp C_MUTE  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &mo LOWER  &kp RETURN    &kp ENTER        &kp SPACE  &mo 2   &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_GUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        lower_layer {
            label = "lower";

            // |       |  F1 |  F2 |  F3 |  F4 |  F5 |       |  F6 |  F7 |  F8 |  F9 |  F10 |  F11 |
            // |   `   |  1  |  2  |  3  |  4  |  5  |       |  6  |  7  |  8  |  9  |   0  |  F12 |
            // |       |  !  |  @  |  #  |  $  |  %  |       |  ^  |  &  |  *  |  (  |   )  |  |   |
            // |       |  =  |  -  |  +  |  {  |  }  |       |  [  |  ]  |  ;  |  :  |   \  |      |
            // |       |     |      |     |      |      |     |      |      |       |      |      |

            bindings = <
&trans     &kp F1     &kp F2     &kp F3       &kp F4    &kp F5       &trans  &kp F6     &kp F7    &kp F8           &kp F9     &kp F10   &kp F11
&kp GRAVE  &kp N1     &kp N2     &kp N3       &kp N4    &kp N5       &trans  &kp N6     &kp N7    &kp N8           &kp N9     &kp N0    &kp F12
&trans     &kp EXCL   &kp AT     &kp HASH     &kp DLLR  &kp PRCNT    &trans  &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp PIPE
&trans     &kp EQUAL  &kp MINUS  &kp KP_PLUS  &kp LBRC  &kp RBRC     &trans  &kp LBKT   &kp RBKT  &kp SEMI         &kp COLON  &kp BSLH  &trans
&trans     &trans     &trans     &trans       &trans    &trans       &trans  &trans     &trans    &trans           &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            label = "raise";

            // | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |       |      |      |      |      |      |      |
            // |       | INS | PSCR| MENU|      |     |       | PGUP |      |  ^   |      |   0  |      |
            // |       | ALT | CTRL| SHFT|      | CAPS|       | PGDN |  <-  |  v   |  ->  |  DEL | BSPC |
            // |       |UNDO | CUT | COPY|PASTE|     |       |      |      |      |      |      |      |
            // |       |     |     |     |      |     |       |      |      |      |      |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans     &trans    &trans    &trans     &trans   &trans
&trans      &kp INS       &kp PSCRN     &kp K_CMENU   &trans        &trans          &trans  &kp PG_UP  &trans    &kp UP    &trans     &kp N0   &trans
&trans      &kp LALT      &kp LCTRL     &kp LSHFT     &trans        &kp CLCK        &trans  &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL  &kp BSPC
&trans      &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE   &trans          &trans  &trans     &trans    &trans    &trans     &trans   &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans     &trans    &trans    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        adjust_layer {
            label = "adjust";

            // | BTCLR |  BT1   |  BT2   |  BT3   |  BT4   |  BT5   |       |      |      |      |      |      |      |
            // | EXTPW | RGB_H- | RGB_H+ | RGB_S- | RGB_S+ | RGB_EF |       |      |      |      |      |      |      |
            // |       | RGB_B- | RGB_B+ |        |        |        |       |      |      |      |      |      |      |
            // |       |        |        |        |        |        | RGB_T |      |      |      |      |      |      |
            // |       |        |        |        |        |        |      |      |      |      |      |      |

            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &none  &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF    &none  &none  &none  &none  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none              &none  &none  &none  &none  &none  &none  &none
&none              &none            &none            &none            &none            &none              &none  &none  &none  &none  &none  &none  &none
&rgb_ug RGB_TOG    &none            &none            &none            &none            &none              &none  &none  &none  &none  &none  &none
            >;
        };
    };
};
