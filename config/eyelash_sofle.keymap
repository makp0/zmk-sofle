#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define MAIN 0
#define SECONDARY 1
#define HARDWARE 2

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    combos {
        compatible = "zmk,combos";

        to_main {
            bindings = <&to 0>;
            key-positions = <61 15>;
            layers = <3>;
            timeout-ms = <1111>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main_layer {
            label = "main";
            bindings = <
&kp GRAVE   &kp N1            &kp N2        &kp N3     &kp N4     &kp N5     &mmv MOVE_UP     &kp N6     &kp N7         &kp N8       &kp N9       &kp N0    &kp LEFT_BRACE
&kp TAB     &kp Q             &kp W         &kp E      &kp R      &kp T      &mmv MOVE_DOWN   &kp Y      &kp U          &kp I        &kp O        &kp P     &kp RIGHT_BRACE
&kp ESCAPE  &kp A             &kp S         &kp D      &kp F      &kp G      &mmv MOVE_LEFT   &kp H      &kp J          &kp K        &kp L        &kp SEMI  &kp SQT
&kp LSHFT   &kp Z             &kp X         &kp C      &kp V      &kp B      &mmv MOVE_RIGHT  &kp N      &kp M          &kp COMMA    &kp DOT      &kp FSLH  &mt RSHIFT BACKSLASH
&kp C_MUTE  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp RCTRL  &kp SPACE  &kp DEL    &mkp LCLK        &kp ENTER  &kp BACKSPACE  &lt 1 MINUS  &lt 2 EQUAL  &kp INS
            >;
        };

        secondary_layer {
            label = "secondary";
            bindings = <
&kp F11   &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &trans     &kp F6     &kp F7    &kp F8    &kp F9     &kp F10  &kp F12
&trans    &none   &to 3   &none   &none   &none     &trans     &kp PG_UP  &kp HOME  &kp UP    &kp END    &none    &none
&kp CLCK  &none   &none   &none   &none   &none     &trans     &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &none    &none
&trans    &none   &none   &none   &none   &none     &trans     &none      &none     &none     &none      &none    &none
&none     &trans  &trans  &trans  &trans  &trans    &mkp RCLK  &trans     &trans    &none     &mo 2      &trans
            >;
        };

        hardware_layer {
            label = "hardware";
            bindings = <
&none            &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &none  &out OUT_TOG     &out OUT_BLE     &out OUT_USB  &none  &none  &bt BT_CLR
&bl BL_TOG       &bl BL_INC       &bl BL_DEC       &bl BL_SET 100   &none            &none              &none  &none            &none            &none         &none  &none  &none
&rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_BRI    &none  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &none         &none  &none  &none
&none            &none            &none            &none            &none            &none              &none  &none            &none            &none         &none  &none  &none
&none            &none            &none            &none            &none            &none              &none  &none            &none            &none         &none  &none
            >;
        };

        windows_layer {
            label = "windows";
            bindings = <
&kp GRAVE   &kp N1            &kp N2     &kp N3     &kp N4        &kp N5          &mmv MOVE_UP     &kp N6     &kp N7         &kp N8       &kp N9     &kp N0    &kp LEFT_BRACE
&kp ESCAPE  &kp Q             &kp W      &kp E      &kp R         &kp T           &mmv MOVE_DOWN   &kp Y      &kp U          &kp I        &kp O      &kp P     &kp RIGHT_BRACE
&kp TAB     &kp A             &kp S      &kp D      &kp F         &kp G           &mmv MOVE_LEFT   &kp H      &kp J          &kp K        &kp L      &kp SEMI  &kp SQT
&kp LSHFT   &kp Z             &kp X      &kp C      &kp V         &kp B           &mmv MOVE_RIGHT  &kp N      &kp M          &kp COMMA    &kp DOT    &kp FSLH  &kp LG(BACKSLASH)
&kp C_MUTE  &kp LEFT_CONTROL  &kp LCTRL  &kp SPACE  &kp LEFT_ALT  &kp LEFT_WIN    &mkp LCLK        &kp ENTER  &kp BACKSPACE  &lt 1 MINUS  &kp EQUAL  &kp INS
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
